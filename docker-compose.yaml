version: '2'
services:
  kafka-1:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    container_name: kafka-1
    ports:
     - 19092:9092
     - 19093:9093
     - 9012:9012
    environment:
     - CLUSTER_ID=oh-sxaDRTcyAr6pFRbXyzA
     - BROKER_ID=1
     - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
     - JMXPORT=9012
     - JMXHOST=0.0.0.0    
     - KAFKA_PROCESS_ROLES=broker,controller
     - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
     - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT  
    healthcheck:
      test: ["CMD", "/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "10.1.0.5:19092"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kafka      
    volumes:
      - kafka1-data:/kafka/data
      - kafka1-config:/kafka/config
      - kafka1-logs:/kafka/logs
       
  kafka-2:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    container_name: kafka-2  
    ports:
      - 29092:9092
      - 29093:9093
      - 9013:9013
    environment:
      - CLUSTER_ID=oh-sxaDRTcyAr6pFRbXyzA
      - BROKER_ID=2
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - JMXPORT=9013
      - JMXHOST=0.0.0.0
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT         
    healthcheck:
      test: ["CMD", "/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "10.1.0.5:29092"]
      interval: 30s
      timeout: 10s
      retries: 5 
    networks:
      - kafka
    volumes:
      - kafka2-data:/kafka/data
      - kafka2-config:/kafka/config
      - kafka2-logs:/kafka/logs      
      
  kafka-3:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    container_name: kafka-3
    ports:
      - 39092:9092
      - 39093:9093
      - 9014:9014
    environment:
      - CLUSTER_ID=oh-sxaDRTcyAr6pFRbXyzA
      - BROKER_ID=3
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - JMXPORT=9014
      - JMXHOST=0.0.0.0
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT     
    healthcheck:
      test: ["CMD", "/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "10.1.0.5:39092"]
      interval: 30s
      timeout: 10s
      retries: 5   
    networks:
      - kafka
    volumes:
      - kafka3-data:/kafka/data
      - kafka3-config:/kafka/config
      - kafka3-logs:/kafka/logs        
      
  postgres:
    image: quay.io/debezium/example-postgres:${DEBEZIUM_VERSION}
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - kafka      
      
  debezium-connect:
    image: quay.io/debezium/connect:${DEBEZIUM_VERSION}
    container_name: debezium-connect
    ports:
      - 8083:8083
    links:
      - kafka-1
      - kafka-2
      - kafka-3
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka-1:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - kafka
      
      
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - kafka 

  debezium-ui:
    container_name: debezium-ui
    image: quay.io/debezium/debezium-ui:${DEBEZIUM_VERSION}
    restart: always
    ports:
      - 8086:8080
    environment:
      - KAFKA_CONNECT_URIS=http://10.1.0.5:8083
    depends_on:
      - debezium-connect
    networks:
      - kafka
    volumes:
      - debezium-ui-data:/data    
      
networks:
  kafka:
    driver: bridge

volumes:
  kafka1-data:
  kafka1-config:
  kafka1-logs:
  kafka2-data:
  kafka2-config:
  kafka2-logs:
  kafka3-data:
  kafka3-config:
  kafka3-logs:
  connect-connect:
  connect-logs:
  connect-data:
  kafka-ui-data:
  debezium-ui-data:           